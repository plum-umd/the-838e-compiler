#lang racket
(begin (require jit/interp-heap jit/heap jit/env jit/unload jit/interp-prims-heap jit/program-ast) (current-input-port (open-input-string "1")) (unload (match (cons (quote ()) (read-byte)) ((quote err) (quote err)) ((cons h a1) (match (interp-env-heap #s(Prim2 + #s(Var v1) #s(Prim2 + #s(Var v2) #s(Var v3))) (cons (cons (quote v3) (cons 3 (quote ()))) (cons (cons (quote v2) (cons 2 (quote ()))) (cons (cons (quote v1) (cons 1 (quote ()))) (quote ())))) h (quote ())) ((quote err) (quote err)) ((cons h a2) (interp-prim2 (quote +) a1 a2 h)))))))
