#lang racket
(begin (require jit/interp-heap jit/heap jit/env jit/unload jit/interp-prims-heap jit/program-ast) (current-input-port (open-input-string "1")) (unload (match (match (cons (quote ()) (read-byte)) ((quote err) (quote err)) ((cons h v) (interp-env-heap #s(Var b) (ext (cons (cons (quote a) (cons 0 (quote ()))) (quote ())) (quote b) v) h (quote ())))) ((quote err) (quote err)) (_ (interp-env-heap #s(Prim0 void) (quote ()) (quote ()) (quote ()))))))
